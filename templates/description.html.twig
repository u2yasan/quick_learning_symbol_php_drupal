aaa
<h1>{% trans %}今日から現場で使える速習Symbolブロックチェーン PHP版(Drupal){% endtrans %}</h1>
<p>
{{ '原作者'|t }}<br>
XEMBook<br>
<a href="https://github.com/xembook/quick_learning_symbol">速習Symbolブロックチェーン</a>
</p>
<p>
PHP{{ '版編集者'|t }}<br>
ishidad2<br>
<a href="https://github.com/ishidad2/quick_learning_symbol-for-php">速習Symbolブロックチェーン(PHP版)</a>
</p>
<p>
PHP_Drupal{{ '版編集者'|t }}<br>
u2yasan<br>
<a href="https://github.com/u2yasan/quick_learning_symbol_php_drupal">速習Symbolブロックチェーン(PHP Drupal版)</a>
</p>

<h2>{{ '目次'|t }}</h2>

<h4><a href=quicklearning_symbol/qls_sect3>第3章 {{ 'アカウント'|t }}</a></h4>
<h4><a href=quicklearning_symbol/qls_sect4>第4章 {{ 'トランザクション'|t }}</a></h4>
<h4><a href=quicklearning_symbol/qls_sect5>第5章 {{ 'モザイク'|t }}</a></h4>
<h4><a href=quicklearning_symbol/qls_sect6>第6章 {{ 'ネームスペース'|t }}</a></h4>
<h4><a href=quicklearning_symbol/qls_sect7>第7章 {{ 'メタデータ'|t }}</a></h4>
<h4><a href=quicklearning_symbol/qls_sect8>第8章 {{ 'ロック'|t }}</a></h4>
<h4><a href=quicklearning_symbol/qls_sect9>第9章 {{ 'マルチシグ化'|t }}</a></h4>
<h4><a href=quicklearning_symbol/qls_sect10>第10章 {{ '監視'|t }}</a></h4>
<h4><a href=quicklearning_symbol/qls_sect11>第11章 {{ '制限'|t }}</a></h4>
<h4><a href=quicklearning_symbol/qls_sect12>第12章 {{ 'オフライン署名'|t }}</a></h4> 
<h4><a href=quicklearning_symbol/qls_sect13>第13章 {{ '検証'|t }}</a></h4>

<h1>{{ 'はじめに'|t }}</h1>

<h2>{{ '本ドキュメントのねらい'|t }}</h2>
<p>
{% trans %}
網羅的に技術全般を扱う一般的な公式ドキュメントとは異なり、本ドキュメントは、素早くSymbolブロックチェーンを活用する技術を身に着けていただくための解説書です。最初から読み進めていただければ、Symbolを活用したアプリ開発のための全体像を無理なく系統立てて学習できるように構成しています。なお、ノードの構築方法やコンセンサスアルゴリズム、インセンティブ報酬などの説明はありません。
{% endtrans %}
</p>

<h2>{{ '本書の対象者'|t }}</h2>
<ul>
<li>{% trans %}ブロックチェーンを試してみたいけど、なにから勉強したらいいのかわからない方。{% endtrans %}</li>
<li>{% trans %}ブロックチェーンを覚えても、なにに使えるのかピンと来ない方。{% endtrans %}</li>
<li>{% trans %}Symbolの教材を作ろうとしてるけどどういう手順で教えたらいいのか悩んでいる方。{% endtrans %}</li>
<li>{% trans %}Symbolって簡単っていうけど、どういう感じで簡単なのかさくっと知りたい方。{% endtrans %}</li>
</ul>

<h2>{{ '現場で使えるとは？'|t }}</h2>
<p>
{% trans %}ブロックチェーンを構成するデータの最小単位はお金ではなくタイムスタンプつき存在証明です。ここに注目すればブロックチェーンは認証やトレーサビリティなど、さらにその用途を広げることができます。 世の中を見渡せば、あらゆることが 信頼の数珠繋ぎ で成り立っていることが分かります。その信頼を形にすることが困難なために、多くのことがお金に変換されて構築されてきました。{% endtrans %}
{% trans %}今、ブロックチェーン技術によりその信頼をお金に変換することなく改ざん不可能な形で記録することができるようになりました。本ドキュメントは、金融だけではなくさらに多くのビジネスや文化の 「現場」 で活躍する人にブロックチェーンの力を活かすヒントを得てもらうために執筆しました。{% endtrans %}
</p>

<h2>{{ '「明日から」じゃなくて「今日から」使えるの意味'|t }}</h2>
<p>
{% trans %}昨今、IoTなどの開発現場では 「もはやPoCすら必要ない」 と表現されることがあります。ITを構成する部品化が進み、試しに作ってみた装置がそのまま実運用を始めてしまえるほどにモジュール化されつつあります。Symbolブロックチェーンもアプリケーションを構築するまでもなく、そして自分でノードを建てる必要もなく、設定したアカウントやトークンがコミュニティの提供するツール群でそのまま高セキュリティな情報基盤として活用できるプラットフォームとなっています。{% endtrans %}
{% trans %}ぜひ、本ドキュメントでその可能性を感じていただければと思います。なお、各章の最後に載せた「現場で使えるヒント」は各機能の横断的な知識が必要になりますので最初は読み飛ばしていただいても大丈夫です。（いくつかの章の現場で使えるヒントは「現在執筆中」とさせていただいております。）{% endtrans %}
</p>

<h2>{{ 'Symbolブロックチェーンでできないこと'|t }}</h2>
<p>
{% trans %}他のチェーンで開発されてきた方のために、すこしだけ説明しておきます。{% endtrans %}
{% trans %}Symbolブロックチェーンにはコントラクトアカウントが存在しません。したがって、スマートコントラクトをデプロイするという発想がなく、すべてのスマートコントラクトは1回だけ実行されて、その効力を失います。そのため、デプロイレス・ワンタイムスマートコントラクトと表現されることもあります。{% endtrans %}
{% trans %}デプロイ不要なため、任意の言語でスマートコントラクトを記述することができ、また、1回限りの実行のため、不適切なループ制御などでネットワークのリソースを大量に消費したり、コントラクト内のロジックを再利用して悪用されるといった脆弱性を狙われることもありません。{% endtrans %}
</p>